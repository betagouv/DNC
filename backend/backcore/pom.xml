<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
    </parent>

    <groupId>fr.gouv.modernisation.dinum.dnc</groupId>
    <artifactId>back-core</artifactId>
    <name>back-core</name>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!--Spring Cloud Config-->
        <spring-cloud-config.version>2.2.4.RELEASE</spring-cloud-config.version>
        <!-- Database -->
        <postgres.version>42.2.8</postgres.version>
        <!-- Test -->
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <junit-jupiter.version>5.6.1</junit-jupiter.version>
        <junit-plateform.version>1.6.1</junit-plateform.version>
        <mockito.version>3.3.3</mockito.version>
        <jacoco.version>0.8.5</jacoco.version>
        <meanbean.version>2.0.3</meanbean.version>
        <!-- Log4j -->
        <log4j.version>2.12.1</log4j.version>
        <org.slf4j.version>1.7.28</org.slf4j.version>

        <!-- Swagger Code Generation -->
        <org-threeten.version>1.3.6</org-threeten.version>
        <swagger-core.version>1.5.18</swagger-core.version>
        <springfox-swagger2.version>2.8.0</springfox-swagger2.version>
        <org-threeten.version>1.3.6</org-threeten.version>
        <swagger-codegen-maven-plugin.version>2.3.1</swagger-codegen-maven-plugin.version>
        <swagger-codegen-maven-plugin-v3.version>3.0.19</swagger-codegen-maven-plugin-v3.version>
        <swagger-annotations.version>1.6.1</swagger-annotations.version>
        <!-- Jackson Threeten BP -->
        <jackson-datatype-threetenbp.version>2.6.4</jackson-datatype-threetenbp.version>

        <!-- RestAssuret (Tests d'API)-->
        <rest-assured.version>3.3.0</rest-assured.version>

        <apache-commons-lang3.version>3.10</apache-commons-lang3.version>
        <apache-commons-collection4.version>4.4</apache-commons-collection4.version>
        <apache-commons-io.version>2.6</apache-commons-io.version>

        <!-- Versions des plugins-->
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
        <build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
        <spotbugs-maven-plugin.version>4.0.0</spotbugs-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>

        <!-- Valeur par défaut pour tous les profiles -->
        <spring.profiles.active></spring.profiles.active>
        <surefire.reuseForks>false</surefire.reuseForks>
        <swagger-v3-annotations.version>2.1.2</swagger-v3-annotations.version>
    </properties>

    <profiles>
        <!-- Profile Par défaut on ne lance que les TUs -->
        <profile>
            <id>DEV</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <maven.javadoc.skip>true</maven.javadoc.skip>
            </properties>
        </profile>
        <profile>
            <id>FULL</id>
            <modules>
                <module>../spring-cloud-config-server</module>
                <module>../common-ms</module>
                <module>../demarche-ms</module>
                <module>../situation-usager-ms</module>
                <module>../franceconnect-ms</module>
                <module>../partenaire-ms</module>
            </modules>
        </profile>

        <!-- Ne lance aucuns tests -->
        <profile>
            <id>SKIP-ALL-TEST</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
                <maven.test.failure.ignore>true</maven.test.failure.ignore>
            </properties>
        </profile>
        <profile>
            <id>ANALYSIS</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>${spotbugs-maven-plugin.version}</version>

                        <executions>
                            <execution>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <xmlOutput>true</xmlOutput>
                            <!-- Optional directory to put spotbugs xdoc xml report -->
                            <xmlOutputDirectory>target/site</xmlOutputDirectory>
                            <failOnError>false</failOnError>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Lance tous les tests -->
        <profile>
            <id>PASS-ALL-TEST</id>
            <properties>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
                <maven.test.failure.ignore>false</maven.test.failure.ignore>
            </properties>
            <build>
                <plugins>
                    <!--Plugins pour l'analyse de code-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                        <version>${maven-checkstyle-plugin.version}</version>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <!--Production des Jar de sources et de la Javadoc Generation -->
        <profile>
            <id>SOURCES_AVADOC</id>
            <properties>
                <maven.javadoc.skip>false</maven.javadoc.skip>
            </properties>
            <build>
                <plugins>
                    <!-- Plugin pour le déploiement -->
                    <!-- Ajout des sources -->
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>${maven-source-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Ajout de la javadoc -->
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>${maven-javadoc-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>javadoc</goal>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fr.gouv.modernisation.dinum.dnc</groupId>
                <artifactId>common-ms</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>

            <!--Précision pour prévenir l'intégration de Logback -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${spring-cloud-config.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-client</artifactId>
                <version>${spring-cloud-config.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${spring-cloud-config.version}</version>
            </dependency>

            <dependency>
                <groupId>org.meanbean</groupId>
                <artifactId>meanbean</artifactId>
                <version>${meanbean.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-v3-annotations.version}</version>
            </dependency>


            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${apache-commons-collection4.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${apache-commons-io.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Build -->
    <build>
        <testResources>
            <testResource>
                <directory>src/it/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <!--Avant les tests d'intégration, nettoyage des exécutions HSQLDB-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <id>clean-hsqldb</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete dir="target/test-classes/hsqldb" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugins pour la constructions des Tests -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>add-test-source</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/java</source>
                                <source>src/test/resources</source>
                                <source>src/it/java</source>
                                <source>src/it/resources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin pour permettre d'ignorer les tests unitaires et uniquement
                faire les tests d'intégration -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!--ArgLine pour éviter un Warning à l'exécution avec Java 11 et supérieur-->
                    <argLine>
                        --illegal-access=permit
                    </argLine>
                    <!-- skips surefire tests without skipping failsafe tests. Property
						value seems to magically default to false -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine} -Dspring.profiles.active=${spring.profiles.active}</argLine>
                    <forkCount>1C</forkCount>
                    <reuseForks>true</reuseForks>
                    <parallel>classes</parallel>
                    <useUnlimitedThreads>true</useUnlimitedThreads>
                    <reuseForks>true</reuseForks>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.execution.parallel.enabled=true
                            junit.jupiter.execution.parallel.config.strategy=dynamic
                            junit.jupiter.execution.parallel.config.dynamic.factor=2
                        </configurationParameters>
                    </properties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit-jupiter.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Plugin pour les tests d'intégration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>

                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit-jupiter.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!--ArgLine pour éviter un Warning à l'exécution avec Java 11 et supérieur-->
                    <argLine>
                        --illegal-access=permit
                    </argLine>
                    <skipTests>${skip.integration.tests}</skipTests>
                    <!-- Sets the VM argument line used when integration tests are run. -->
                    <argLine>${failsafeArgLine} -Dspring.profiles.active=${spring.profiles.active}</argLine>
                    <testSourceDirectory>${project.basedir}/src/it/java</testSourceDirectory>
                    <includes>
                        <include>**/*IT*.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*Test.java</exclude>
                    </excludes>
                    <parallel>classes</parallel>
                    <parallelMavenExecution>false</parallelMavenExecution>
                    <parallelOptimized>false</parallelOptimized>
                    <reuseForks>false</reuseForks>
                    <threadCount>1</threadCount>
                    <reportsDirectory>${project.build.directory}/surefire-reports-it</reportsDirectory>
                </configuration>
            </plugin>

            <!-- Plugin pour le reporting de la couverture du code -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <!-- Agent Report TUs -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                            <!-- Sets the name of the property containing the settings for JaCoCo
                                runtime agent. -->
                            <propertyName>surefireArgLine</propertyName>
                            <!-- Exclusion des codes générés et des loaders ayant des méthodes
                                trop longues -->
                            <excludes>
                                <exclude>**/generated/**</exclude>
                                <exclude>**/generated/*</exclude>
                                <exclude>fr/gouv/finances/cisirh/ctdsn/batch/integration/loader/*</exclude>
                            </excludes>
                        </configuration>
                    </execution>

                    <!-- Reporting TUs -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.build.directory}/jacoco-ut</outputDirectory>
                            <!-- Exclusion des codes générés -->
                            <excludes>
                                <exclude>**/generated/**</exclude>
                                <exclude>**/generated/*</exclude>
                                <exclude>fr/gouv/finances/cisirh/ctdsn/batch/integration/loader/*</exclude>
                            </excludes>
                        </configuration>
                    </execution>

                    <!-- Agent Report TIs -->
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                            <!-- Sets the name of the property containing the settings for JaCoCo
                                runtime agent. -->
                            <propertyName>failsafeArgLine</propertyName>
                            <!-- Exclusion des codes générés -->
                            <excludes>
                                <exclude>**/generated/**</exclude>
                                <exclude>**/generated/*</exclude>
                                <exclude>fr/gouv/finances/cisirh/ctdsn/batch/integration/loader/*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!-- Reporting TIs -->
                    <execution>
                        <id>report-it</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.build.directory}/jacoco-it</outputDirectory>
                            <!-- Exclusion des codes générés -->
                            <excludes>
                                <exclude>**/generated/**</exclude>
                                <exclude>**/generated/*</exclude>
                                <exclude>fr/gouv/finances/cisirh/ctdsn/batch/integration/loader/*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!-- Fusion Reports TUs & TIs -->
                    <execution>
                        <id>merge-reports</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-final.exec</destFile>
                        </configuration>

                    </execution>

                    <!-- Reporting TUs+TIs -->
                    <execution>
                        <id>report-full</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${project.build.directory}/jacoco-final.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.build.directory}/jacoco-final</outputDirectory>
                            <!-- Exclusion des codes générés -->
                            <excludes>
                                <exclude>**/generated/**</exclude>
                                <exclude>**/generated/*</exclude>
                                <exclude>fr/gouv/finances/cisirh/ctdsn/batch/integration/loader/*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>